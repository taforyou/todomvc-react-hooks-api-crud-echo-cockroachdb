{"version":3,"sources":["TodoMvcView.js","TodoMvcApp.js","index.js"],"names":["FILTER_ALL","FILTER_ACTIVE","FILTER_COMPLETED","TodoMvcView","state","filter","getActiveTodos","props","todos","completed","getCompletedTodos","getActiveCount","length","applyFilter","setState","getFilteredTodos","filteredTodos","this","loading","error","modifyingTodos","errorTodos","retry","create","update","remove","toggleAll","clearCompleted","activeCount","completedCount","onSubmit","onUpdate","onRemove","hasActive","value","enabledFilter","onClick","React","Component","RequestStatus","style","position","top","right","color","href","e","preventDefault","Layout","children","className","Header","Main","Footer","NewTodo","title","handleChange","target","handleSubmit","onChange","placeholder","TodoList","id","type","checked","htmlFor","sort","a","b","map","todo","key","TodoItem","editing","submitting","removing","newTitle","ESCAPE_KEY","ENTER_KEY","inputRef","createRef","startEditing","current","focus","closeEditing","handleNewTitleChange","submitUpdate","handleKeyDown","which","toggleCompleted","classNames","background","onDoubleClick","ref","disabled","onBlur","onKeyDown","autoFocus","ActiveCount","Filters","selected","ClearCompleted","axiosInstance","axios","baseURL","todoToRequest","url","data","interceptors","request","use","config","console","log","Math","random","provideAxiosInstance","TodoMvcApp","useGetData","fetching","setTodos","setData","fetchInfo","usePostCallback","creating","created","createInfo","useEffect","useParallelPatchCallback","updating","updated","updateInfo","find","useParallelDeleteCallback","removed","succeed","removeInfo","includes","newCompleted","Boolean","errors","getLastErrorAndRetry","ReactDOM","render","document","getElementById"],"mappings":"i6BAGA,IAAMA,EAAa,MACbC,EAAgB,SAChBC,EAAmB,YAEnBC,E,2MACJC,MAAQ,CAAEC,OAAQL,G,EAElBM,eAAiB,kBAAM,EAAKC,MAAMC,MAAMH,QAAO,qBAAGI,c,EAElDC,kBAAoB,kBAClB,EAAKH,MAAMC,MAAMH,QAAO,qBAAGI,c,EAE7BE,eAAiB,kBAAM,EAAKL,iBAAiBM,Q,EAE7CC,YAAc,SAAAR,GAAM,OAAI,EAAKS,SAAS,CAAET,Y,EAExCU,iBAAmB,WACjB,OAAQ,EAAKX,MAAMC,QACjB,KAAKJ,EACH,OAAO,EAAKK,iBACd,KAAKJ,EACH,OAAO,EAAKQ,oBACd,KAAKV,EACL,QACE,OAAO,EAAKO,MAAMC,Q,wEAKtB,IAAMQ,EAAgBC,KAAKF,mBADpB,EASHE,KAAKV,MANPW,EAHK,EAGLA,QACAC,EAJK,EAILA,MACAC,EALK,EAKLA,eACAC,EANK,EAMLA,WACAC,EAPK,EAOLA,MACAd,EARK,EAQLA,MARK,EAUuDS,KAAKV,MAA3DgB,EAVD,EAUCA,OAAQC,EAVT,EAUSA,OAAQC,EAVjB,EAUiBA,OAAQC,EAVzB,EAUyBA,UAAWC,EAVpC,EAUoCA,eACrCC,EAAcX,KAAKN,iBACnBkB,EAAiBZ,KAAKV,MAAMC,MAAMI,OAASgB,EACzCvB,EAAWY,KAAKb,MAAhBC,OAER,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,qCACA,kBAAC,EAAD,CAAea,QAASA,EAASC,MAAOA,EAAOG,MAAOA,IACtD,kBAAC,EAAD,CAASQ,SAAUP,MAEnBf,EAAMI,QACN,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEQ,eAAgBA,EAChBC,WAAYA,EACZb,MAAOQ,EACPe,SAAUP,EACVQ,SAAUP,EACVC,UAAWA,EACXO,UAAWL,EAAc,KAG7B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAaM,MAAON,IACpB,kBAAC,EAAD,CAASO,cAAe9B,EAAQQ,YAAaI,KAAKJ,eAChDgB,GAAkB,kBAAC,EAAD,CAAgBO,QAAST,W,GA9DjCU,IAAMC,WAuE1BC,EAAgB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOG,EAAnB,EAAmBA,MAAnB,OACpB,wBACEkB,MAAO,CACLC,SAAU,WACVC,KAAM,GACNC,MAAO,GACPC,MAAOzB,EAAQ,MAAQ,aAGvBD,GAAW,mDACXC,GACA,oCACGA,EAAO,IACR,uBACE0B,KAAK,IACLT,QAAS,SAAAU,GACPA,EAAEC,iBACFzB,MAJJ,YAgBF0B,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,6BAASC,UAAU,WAAWD,IAG1BE,EAAS,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAAkB,4BAAQC,UAAU,UAAUD,IAEvDG,EAAO,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OAAkB,6BAASC,UAAU,QAAQD,IAEpDI,EAAS,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OAAkB,4BAAQC,UAAU,UAAUD,IAIvDK,E,2MACJlD,MAAQ,CAAEmD,MAAO,I,EAEjBC,aAAe,SAAAV,GAAC,OAAI,EAAKhC,SAAS,CAAEyC,MAAOT,EAAEW,OAAOvB,S,EAEpDwB,aAAe,SAAAZ,GACbA,EAAEC,iBACE,EAAK3C,MAAMmD,MAAM3C,SACnB,EAAKL,MAAMuB,SAAS,CAAEyB,MAAO,EAAKnD,MAAMmD,MAAO9C,WAAW,IAC1D,EAAKK,SAAS,CAAEyC,MAAO,O,wEAIjB,IACAA,EAAUtC,KAAKb,MAAfmD,MAER,OACE,0BAAMzB,SAAUb,KAAKyC,cACnB,2BACEC,SAAU1C,KAAKuC,aACftB,MAAOqB,EACPL,UAAU,WACVU,YAAY,gC,GAtBAvB,IAAMC,WA+BtBuB,EAAW,SAAC,GAAD,IAAGrD,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,SAAUN,EAA9B,EAA8BA,UAAWO,EAAzC,EAAyCA,UAAzC,OACf,oCACE,2BACE6B,GAAG,aACHZ,UAAU,aACVa,KAAK,WACLJ,SAAUjC,EACVsC,SAAU/B,IAEZ,2BAAOgC,QAAQ,cAAf,wBACA,wBAAIf,UAAU,aACX1C,EACE0D,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEL,GAAKM,EAAEN,GAAK,GAAK,KACnCO,KAAI,SAAAC,GAAI,OACP,kBAAC,EAAD,CACEC,IAAG,UAAKD,EAAKR,GAAV,aAAiBQ,EAAKf,OACzBe,KAAMA,EACNvC,SAAUA,EACVC,SAAUA,UAOhBwC,E,2MACJpE,MAAQ,CACNqE,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,SAAU,I,EAGZC,WAAa,G,EACbC,UAAY,G,EAEZC,SAAW1C,IAAM2C,Y,EAEjBC,aAAe,WACb,EAAKnE,SACH,CACE2D,SAAS,EACTG,SAAU,EAAKrE,MAAM+D,KAAKf,QAE5B,kBAAM,EAAKwB,SAASG,QAAQC,Y,EAIhCC,aAAe,kBAAM,EAAKtE,SAAS,CAAE2D,SAAS,K,EAE9CY,qBAAuB,SAAAvC,GAAC,OAAI,EAAKhC,SAAS,CAAE8D,SAAU9B,EAAEW,OAAOvB,S,EAE/DoD,aAAe,WACT,EAAKlF,MAAMwE,WAAa,EAAKrE,MAAM+D,KAAKf,QAC1C,EAAKzC,SAAS,CAAE4D,YAAY,IAC5B,EAAKnE,MAAMwB,SAAX,KAAyB,EAAKxB,MAAM+D,KAApC,CAA0Cf,MAAO,EAAKnD,MAAMwE,c,EAIhEW,cAAgB,SAAAzC,GACVA,EAAE0C,QAAU,EAAKX,YACnB,EAAK/D,SAAS,CAAE8D,SAAU,EAAKrE,MAAM+D,KAAKf,QAC1C,EAAK6B,gBACItC,EAAE0C,QAAU,EAAKV,WAC1B,EAAKQ,aAAaxC,I,EAItBrB,OAAS,WACP,EAAKX,SAAS,CAAE6D,UAAU,IAC1B,EAAKpE,MAAMyB,SAAS,EAAKzB,MAAM+D,O,EAGjCmB,gBAAkB,kBAChB,EAAKlF,MAAMwB,SAAX,KACK,EAAKxB,MAAM+D,KADhB,CAEE7D,WAAY,EAAKF,MAAM+D,KAAK7D,c,wEAGtB,IAAD,EACsBQ,KAAKV,MAAM+D,KAAhCf,EADD,EACCA,MAAO9C,EADR,EACQA,UADR,EAE6CQ,KAAKb,MAAjDqE,EAFD,EAECA,QAASC,EAFV,EAEUA,WAAYC,EAFtB,EAEsBA,SAAUC,EAFhC,EAEgCA,SAEvC,OACE,wBACE1B,UAAWwC,IAAW,CAAEjF,YAAWgE,YACnCjC,MAAO,CAAEmD,WAAYhB,EAAW,OAAS,OAEzC,yBAAKzB,UAAU,QACb,2BACEA,UAAU,SACVa,KAAK,WACLC,QAASvD,EACTkD,SAAU1C,KAAKwE,kBAEjB,2BAAOG,cAAe3E,KAAKgE,cAAe1B,GAC1C,4BAAQL,UAAU,UAAUd,QAASnB,KAAKQ,UAE5C,2BACEyB,UAAU,OACVhB,MAAO0C,EACPiB,IAAK5E,KAAK8D,SACVe,SAAUpB,EACVf,SAAU1C,KAAKoE,qBACfU,OAAQ9E,KAAKqE,aACbU,UAAW/E,KAAKsE,cAChBU,WAAS,S,GAjFI5D,IAAMC,WA0FvB4D,EAAc,SAAC,GAAD,IAAGhE,EAAH,EAAGA,MAAH,OAClB,0BAAMgB,UAAU,cACd,gCAAShB,GADX,eAKIiE,EAAU,SAAC,GAAD,IAAGhE,EAAH,EAAGA,cAAetB,EAAlB,EAAkBA,YAAlB,OACd,wBAAIqC,UAAU,WACZ,4BACE,uBACEd,QAAS,kBAAMvB,EAAYb,IAC3BkD,UAAWwC,IAAW,CAAEU,SAAUjE,IAAkBnC,IACpD6C,KAAK,KAHP,QAQF,4BACE,uBACET,QAAS,kBAAMvB,EAAYZ,IAC3BiD,UAAWwC,IAAW,CAAEU,SAAUjE,IAAkBlC,IACpD4C,KAAK,KAHP,WAQF,4BACE,uBACET,QAAS,kBAAMvB,EAAYX,IAC3BgD,UAAWwC,IAAW,CAAEU,SAAUjE,IAAkBjC,IACpD2C,KAAK,KAHP,gBAWAwD,EAAiB,SAAC,GAAD,IAAGjE,EAAH,EAAGA,QAAH,OACrB,4BAAQc,UAAU,kBAAkBd,QAASA,GAA7C,oBAKajC,I,qOCrSf,IAEMmG,EAAgBC,IAAMhF,OAAO,CAEjCiF,QAAS,8BAgBX,SAASC,EAAT,GAAkD,IAAzB3C,EAAwB,EAAxBA,GAAIP,EAAoB,EAApBA,MAAO9C,EAAa,EAAbA,UAClC,MAAO,CACLiG,IAAI,UAAD,OAAY5C,GAAM,IACrB6C,KAAM,CAAEpD,QAAO9C,cAjBnB6F,EAAcM,aAAaC,QAAQC,KAAI,SAASC,GAG9C,OAFAC,QAAQC,IAAIF,G,yVAEL,IACFA,EADL,CAEEL,KAAMQ,KAAKC,SAXU,EAWoB,MAAQ,IAAMJ,EAAOL,SAIlEU,YAAqBd,GA0GNe,MA9FI,WAAM,MAQnBC,YAAW,UARQ,0BAKrB9G,OALqB,MAKb,GALa,EAMrB+G,EANqB,YAOVC,EAPU,EAOnBC,QAAsBC,EAPH,6BAWsCC,YAC3DlB,GAZqB,mBAWhBlF,EAXgB,KAWRqG,EAXQ,YAWUC,EAXV,EAWIlB,KAAkBmB,EAXtB,wBAiBvBC,qBAAU,WACRF,GAAWL,EAAS,GAAD,mBAAKhH,GAAL,CAAYqH,OAC9B,CAACA,IAnBmB,MA2BnBG,YAAyBvB,GA3BN,mBAwBrBjF,EAxBqB,KAyBrByG,EAzBqB,YA0BbC,EA1Ba,EA0BnBvB,KAAkBwB,EA1BC,wBA8BvBJ,qBAAU,WACRP,EACEhH,EAAM6D,KAAI,SAAAC,GAAI,OAAI4D,EAAQE,MAAK,qBAAGtE,KAAgBQ,EAAKR,OAAOQ,QAE/D,CAAC4D,IAlCmB,MAyCnBG,YAA0B5B,GAzCP,mBAsCrBhF,EAtCqB,KAuCrBkD,EAvCqB,YAwCV2D,EAxCU,EAwCnBC,QAAqBC,EAxCF,2BA0CvBT,qBAAU,WACRP,EAAShH,EAAMH,QAAO,SAAAiE,GAAI,OAAKgE,EAAQG,SAASnE,SAC/C,CAACgE,IAkBJ,OACE,kBAAC,EAAD,eACEpH,QAASqG,GAAYK,GAAYK,GAAYtD,EAC7CnE,MAAOA,EACPe,OAAQA,EACRC,OAAQ,SAAA8C,GAAI,OAAI9C,EAAO,CAAC8C,KACxB7C,OAAQ,SAAA6C,GAAI,OAAI7C,EAAO,CAAC6C,KACxB5C,UArBc,WAChB,IAAMgH,EAAeC,QAAQnI,EAAM4H,MAAK,qBAAG3H,cAC3Ce,EACEhB,EACGH,QAAO,qBAAGI,YAA8BiI,KACxCrE,KAAI,kBAAa,CAAEP,GAAf,EAAGA,GAAgBrD,UAAWiI,QAiBrC/G,eAbmB,kBACrBF,EAAOjB,EAAMH,QAAO,qBAAGI,gBAqB3B,SAA8BiH,EAAWI,EAAYK,EAAYK,GAC/D,QAAQ,GACN,KAAKG,QAAQjB,EAAUvG,OACrB,MAAO,CAAEA,MAAO,eAAgBG,MAAOoG,EAAUpG,OACnD,KAAKqH,QAAQb,EAAW3G,OACtB,MAAO,CAAEA,MAAO,gBAAiBG,MAAOwG,EAAWxG,OACrD,KAAKqH,QAAQR,EAAWS,OAAOhI,QAC7B,MAAO,CAAEO,MAAO,gBAAiBG,MAAO6G,EAAW7G,OACrD,KAAKqH,QAAQH,EAAWI,OAAOhI,QAC7B,MAAO,CAAEO,MAAO,gBAAiBG,MAAOkH,EAAWlH,OACrD,QACE,MAAO,IAnBHuH,CAAqBnB,EAAWI,EAAYK,EAAYK,MC9GlEM,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,W","file":"static/js/main.89f27693.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nconst FILTER_ALL = 'all'\nconst FILTER_ACTIVE = 'active'\nconst FILTER_COMPLETED = 'completed'\n\nclass TodoMvcView extends React.Component {\n  state = { filter: FILTER_ALL }\n\n  getActiveTodos = () => this.props.todos.filter(({ completed }) => !completed)\n\n  getCompletedTodos = () =>\n    this.props.todos.filter(({ completed }) => completed)\n\n  getActiveCount = () => this.getActiveTodos().length\n\n  applyFilter = filter => this.setState({ filter })\n\n  getFilteredTodos = () => {\n    switch (this.state.filter) {\n      case FILTER_ACTIVE:\n        return this.getActiveTodos()\n      case FILTER_COMPLETED:\n        return this.getCompletedTodos()\n      case FILTER_ALL:\n      default:\n        return this.props.todos\n    }\n  }\n\n  render() {\n    const filteredTodos = this.getFilteredTodos()\n    const {\n      loading,\n      error,\n      modifyingTodos,\n      errorTodos,\n      retry,\n      todos,\n    } = this.props\n    const { create, update, remove, toggleAll, clearCompleted } = this.props\n    const activeCount = this.getActiveCount()\n    const completedCount = this.props.todos.length - activeCount\n    const { filter } = this.state\n\n    return (\n      <Layout>\n        <Header>\n          <h1>todos</h1>\n          <RequestStatus loading={loading} error={error} retry={retry} />\n          <NewTodo onSubmit={create} />\n        </Header>\n        {!todos.length || (\n          <>\n            <Main>\n              <TodoList\n                modifyingTodos={modifyingTodos}\n                errorTodos={errorTodos}\n                todos={filteredTodos}\n                onUpdate={update}\n                onRemove={remove}\n                toggleAll={toggleAll}\n                hasActive={activeCount > 0}\n              />\n            </Main>\n            <Footer>\n              <ActiveCount value={activeCount} />\n              <Filters enabledFilter={filter} applyFilter={this.applyFilter} />\n              {!completedCount || <ClearCompleted onClick={clearCompleted} />}\n            </Footer>\n          </>\n        )}\n      </Layout>\n    )\n  }\n}\n\nconst RequestStatus = ({ loading, error, retry }) => (\n  <h5\n    style={{\n      position: 'absolute',\n      top: -48,\n      right: 10,\n      color: error ? 'red' : 'inherit',\n    }}\n  >\n    {!loading || <>Loading...</>}\n    {!error || (\n      <>\n        {error}{' '}\n        <a\n          href='#'\n          onClick={e => {\n            e.preventDefault()\n            retry()\n          }}\n        >\n          RETRY\n        </a>\n      </>\n    )}\n  </h5>\n)\n\n// Layout components ---------------------------------------------------------------------------------------------------\n\nconst Layout = ({ children }) => (\n  <section className='todoapp'>{children}</section>\n)\n\nconst Header = ({ children }) => <header className='header'>{children}</header>\n\nconst Main = ({ children }) => <section className='main'>{children}</section>\n\nconst Footer = ({ children }) => <footer className='footer'>{children}</footer>\n\n// Header components ---------------------------------------------------------------------------------------------------\n\nclass NewTodo extends React.Component {\n  state = { title: '' }\n\n  handleChange = e => this.setState({ title: e.target.value })\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.title.length) {\n      this.props.onSubmit({ title: this.state.title, completed: false })\n      this.setState({ title: '' })\n    }\n  }\n\n  render() {\n    const { title } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handleChange}\n          value={title}\n          className='new-todo'\n          placeholder='What needs to be done?'\n        />\n      </form>\n    )\n  }\n}\n\n// Main section components ---------------------------------------------------------------------------------------------\n\nconst TodoList = ({ todos, onUpdate, onRemove, toggleAll, hasActive }) => (\n  <>\n    <input\n      id='toggle-all'\n      className='toggle-all'\n      type='checkbox'\n      onChange={toggleAll}\n      checked={!hasActive}\n    />\n    <label htmlFor='toggle-all'>Mark all as complete</label>\n    <ul className='todo-list'>\n      {todos\n        .sort((a, b) => (a.id > b.id ? 1 : -1))\n        .map(todo => (\n          <TodoItem\n            key={`${todo.id}::${todo.title}`}\n            todo={todo}\n            onUpdate={onUpdate}\n            onRemove={onRemove}\n          />\n        ))}\n    </ul>\n  </>\n)\n\nclass TodoItem extends React.Component {\n  state = {\n    editing: false,\n    submitting: false,\n    removing: false,\n    newTitle: '',\n  }\n\n  ESCAPE_KEY = 27\n  ENTER_KEY = 13\n\n  inputRef = React.createRef()\n\n  startEditing = () => {\n    this.setState(\n      {\n        editing: true,\n        newTitle: this.props.todo.title,\n      },\n      () => this.inputRef.current.focus(),\n    )\n  }\n\n  closeEditing = () => this.setState({ editing: false })\n\n  handleNewTitleChange = e => this.setState({ newTitle: e.target.value })\n\n  submitUpdate = () => {\n    if (this.state.newTitle !== this.props.todo.title) {\n      this.setState({ submitting: true })\n      this.props.onUpdate({ ...this.props.todo, title: this.state.newTitle })\n    }\n  }\n\n  handleKeyDown = e => {\n    if (e.which === this.ESCAPE_KEY) {\n      this.setState({ newTitle: this.props.todo.title })\n      this.closeEditing()\n    } else if (e.which === this.ENTER_KEY) {\n      this.submitUpdate(e)\n    }\n  }\n\n  remove = () => {\n    this.setState({ removing: true })\n    this.props.onRemove(this.props.todo)\n  }\n\n  toggleCompleted = () =>\n    this.props.onUpdate({\n      ...this.props.todo,\n      completed: !this.props.todo.completed,\n    })\n\n  render() {\n    const { title, completed } = this.props.todo\n    const { editing, submitting, removing, newTitle } = this.state\n\n    return (\n      <li\n        className={classNames({ completed, editing })}\n        style={{ background: removing ? '#eee' : null }}\n      >\n        <div className='view'>\n          <input\n            className='toggle'\n            type='checkbox'\n            checked={completed}\n            onChange={this.toggleCompleted}\n          />\n          <label onDoubleClick={this.startEditing}>{title}</label>\n          <button className='destroy' onClick={this.remove} />\n        </div>\n        <input\n          className='edit'\n          value={newTitle}\n          ref={this.inputRef}\n          disabled={submitting}\n          onChange={this.handleNewTitleChange}\n          onBlur={this.submitUpdate}\n          onKeyDown={this.handleKeyDown}\n          autoFocus\n        />\n      </li>\n    )\n  }\n}\n\n// Footer components ---------------------------------------------------------------------------------------------------\n\nconst ActiveCount = ({ value }) => (\n  <span className='todo-count'>\n    <strong>{value}</strong> item left\n  </span>\n)\n\nconst Filters = ({ enabledFilter, applyFilter }) => (\n  <ul className='filters'>\n    <li>\n      <a\n        onClick={() => applyFilter(FILTER_ALL)}\n        className={classNames({ selected: enabledFilter === FILTER_ALL })}\n        href='#'\n      >\n        All\n      </a>\n    </li>\n    <li>\n      <a\n        onClick={() => applyFilter(FILTER_ACTIVE)}\n        className={classNames({ selected: enabledFilter === FILTER_ACTIVE })}\n        href='#'\n      >\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        onClick={() => applyFilter(FILTER_COMPLETED)}\n        className={classNames({ selected: enabledFilter === FILTER_COMPLETED })}\n        href='#'\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n)\n\nconst ClearCompleted = ({ onClick }) => (\n  <button className='clear-completed' onClick={onClick}>\n    Clear completed\n  </button>\n)\n\nexport default TodoMvcView\n","import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport TodoMvcView from './TodoMvcView'\nimport {\n  provideAxiosInstance,\n  useGetData,\n  usePostCallback,\n  useParallelPatchCallback,\n  useParallelDeleteCallback,\n} from 'use-axios-react'\n\n// Construct and provide an axios instance to use with the axios hooks *************************************************\n\n/**\n * Implement some random error on our axios instance to be able to test the retry() function\n */\nconst ERROR_LIKELIHOOD = 0\n\nconst axiosInstance = axios.create({\n  //baseURL: 'https://todo-backend-node-koa.herokuapp.com',\n  baseURL: 'http://localhost:8080/api',\n})\naxiosInstance.interceptors.request.use(function(config) {\n  console.log(config)\n\n  return {\n    ...config,\n    url: (Math.random() < ERROR_LIKELIHOOD ? '404' : '') + config.url,\n  }\n})\n\nprovideAxiosInstance(axiosInstance)\n\n/**\n * Function mapping Todos to axios request config objects\n */\nfunction todoToRequest({ id, title, completed }) {\n  return {\n    url: `/todos/${id || ''}`,\n    data: { title, completed },\n  }\n}\n\nconst TodoMvcApp = () => {\n  // The CRUD **********************************************************************************************************\n\n  // Load the todos on initial render\n  const [\n    todos = [],\n    fetching,\n    { setData: setTodos, ...fetchInfo },\n  ] = useGetData('/todos')\n\n  // Declare the create() callback\n  const [create, creating, { data: created, ...createInfo }] = usePostCallback(\n    todoToRequest,\n  )\n\n  // Update todos array every time we create a new one\n  // (re-run the useEffect every time the `created` changes i.e. every time we create a new todo)\n  useEffect(() => {\n    created && setTodos([...todos, created])\n  }, [created])\n\n  // Declare the update() callback. Notice that unlike the create() it's now a batch/parallel callback to allow\n  // toggle all batch operation.\n  const [\n    update,\n    updating,\n    { data: updated, ...updateInfo },\n  ] = useParallelPatchCallback(todoToRequest)\n\n  // Update the `todos` array every time the `updated` var changes i.e. every time we've updated something\n  useEffect(() => {\n    setTodos(\n      todos.map(todo => updated.find(({ id }) => id === todo.id) || todo),\n    )\n  }, [updated])\n\n  // Declar the batch/parallel remove() callback and update todos inside a useEffect() similarly to the previous exampple\n  const [\n    remove,\n    removing,\n    { succeed: removed, ...removeInfo },\n  ] = useParallelDeleteCallback(todoToRequest)\n  useEffect(() => {\n    setTodos(todos.filter(todo => !removed.includes(todo)))\n  }, [removed])\n\n  // By this point we have our CRUD set up, later code declares some helper methods using the above CRUD callbacks ******\n\n  const toggleAll = () => {\n    const newCompleted = Boolean(todos.find(({ completed }) => !completed))\n    update(\n      todos\n        .filter(({ completed }) => completed !== newCompleted)\n        .map(({ id }) => ({ id, completed: newCompleted })),\n    )\n  }\n\n  const clearCompleted = () =>\n    remove(todos.filter(({ completed }) => completed))\n\n  // Provide the view with our CRUD and helper methods *****************************************************************\n\n  return (\n    <TodoMvcView\n      loading={fetching || creating || updating || removing}\n      todos={todos}\n      create={create}\n      update={todo => update([todo])}\n      remove={todo => remove([todo])}\n      toggleAll={toggleAll}\n      clearCompleted={clearCompleted}\n      {...getLastErrorAndRetry(fetchInfo, createInfo, updateInfo, removeInfo)}\n    />\n  )\n}\n\n/**\n * Returns the first { error, retry } pair where error is not null (for simplicity showing a single error & retry)\n */\nfunction getLastErrorAndRetry(fetchInfo, createInfo, updateInfo, removeInfo) {\n  switch (true) {\n    case Boolean(fetchInfo.error):\n      return { error: 'fetch failed', retry: fetchInfo.retry }\n    case Boolean(createInfo.error):\n      return { error: 'create failed', retry: createInfo.retry }\n    case Boolean(updateInfo.errors.length):\n      return { error: 'update failed', retry: updateInfo.retry }\n    case Boolean(removeInfo.errors.length):\n      return { error: 'remove failed', retry: removeInfo.retry }\n    default:\n      return {}\n  }\n}\n\nexport default TodoMvcApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TodoMvcApp from './TodoMvcApp'\n\nReactDOM.render(<TodoMvcApp />, document.getElementById('root'))\n"],"sourceRoot":""}